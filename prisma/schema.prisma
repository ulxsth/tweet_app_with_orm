// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement()) @map("user_id")
  email     String    @unique
  name      String
  imageName String    @map("image_name")
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  posts     Post[]
  likes     Like[]
  retweets  Retweet[]

  @@map("users")
}

model Post {
  id        Int       @id @default(autoincrement()) @map("post_id")
  content   String
  user      User      @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId    Int       @map("user_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  likes     Like[]
  retweets  Retweet[]

  @@map("posts")
}

model Like {
  user      User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId    Int      @map("user_id")
  post      Post     @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  postId    Int      @map("post_id")
  createdAt DateTime @default(now()) @map("created_at")

  @@id([userId, postId])
  @@map("likes")
}

model Retweet {
  user      User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId    Int      @map("user_id")
  post      Post     @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  postId    Int      @map("post_id")
  createdAt DateTime @default(now()) @map("created_at")

  @@id([userId, postId])
  @@map("retweets")
}
